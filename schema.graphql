interface Event {
  id: ID!
  collection: Collection
  nft: Nft
  eventType: EventType!
  txHash: Bytes!
  blockHash: Bytes!
  timestamp: BigInt!
  logNumber: BigInt!
  blockNumber: BigInt!
}

enum EventType {
  SALE
  FEE
  AUCTION
}

# enum NetworkType{
#   MAINNET
#   POLYGON
# }

type Account @entity {
  id: ID!
  numberOfSales: BigInt!
  numberOfPurchases: BigInt!
  totalSpent: BigInt!
  totalEarned: BigInt!
  #nftOwnedAndCollection: [String!]!
  sales: [Sale!]! @derivedFrom(field: "buyer")
}

type Collection @entity {
  id: ID!
  nft: Nft

  totalSupply: BigInt
  contractURI: String
  version: String
  codename: String
  numberOfSales: BigInt!
  totalSales: BigInt!
  tokenId: BigInt!
  gasUsed: BigInt!

  owner: Account!

  event: [Event!]! @derivedFrom(field: "collection")
  sales: [Sale!]! @derivedFrom(field: "collection")
  feesReceived: [Fee!]! @derivedFrom(field: "feeRecipient")
}

type Nft @entity {
  id: ID! #Collection + Token ID
  collection: Collection
  symbol: String
  sale: Sale

  numberOfSales: BigInt!
  totalSales: BigInt

  tokenID: BigInt
  owner: Account!

  "All events"
  events: [Event!]! @derivedFrom(field: "nft")
}

type Sale implements Event @entity {
  id: ID!
  sellHash: Bytes!
  buyHash: Bytes!
  buyer: Account!
  seller: Account!
  price: BigInt!
  paymentToken: PaymentToken
  collection: Collection

  nft: Nft

  eventType: EventType!
  logNumber: BigInt!
  txHash: Bytes!
  blockHash: Bytes!
  timestamp: BigInt!
  blockNumber: BigInt!
}

type Fee implements Event @entity {
  id: ID!
  takerRelayerFee: BigInt
  makerRelayerFee: BigInt
  takerProtocolFee: BigInt
  makerProtocolFee: BigInt
  feeRecipient: Collection!
  collection: Collection #Check if this is to a collection
  nft: Nft
  eventType: EventType!
  txHash: Bytes!
  blockHash: Bytes!
  timestamp: BigInt!
  logNumber: BigInt!
  blockNumber: BigInt!
}

type Auction implements Event @entity {
  id: ID!
  listingTime: BigInt
  expirationTime: BigInt
  basePrice: BigInt
  paymentToken: PaymentToken
  staticTarget: Bytes
  staticExtraData: Bytes
  collection: Collection
  nft: Nft
  extra: BigInt
  hash: Bytes
  orderbook: Boolean!
  eventType: EventType!
  txHash: Bytes!
  blockHash: Bytes!
  timestamp: BigInt!
  logNumber: BigInt!
  blockNumber: BigInt!
}

type PaymentToken @entity {
  id: ID! #Payment token e.g USDC, ETH, DAI
  symbol: String
  name: String
  address: String!
  decimals: BigInt
  numberOfSales: BigInt!
  sales: [Sale!]! @derivedFrom(field: "paymentToken")
}

interface Event {
  id: ID!
  collection: Collection
  nft: Nft
  eventType: EventType!
  txHash: Bytes
  blockHash: Bytes
  timestamp: BigInt
  logIndex: BigInt
  blockNumber: BigInt
}

enum EventType {
  TRANSFER
  SALE
  FEE
  AUCTION
}

# enum NetworkType{
#   MAINNET
#   POLYGON
# }

type Account @entity {
  id: ID!
  ownedCollection: [Collection!]! @derivedFrom(field: "owner")
  nftOwned: [Nft!]! @derivedFrom(field: "owner")
  sales: [Sale!]! @derivedFrom(field: "account")
  sends: [Transfer!]! @derivedFrom(field: "account")
  feeRecipients: [Fee!]! @derivedFrom(field: "account")
  numberOfTransfers: BigInt!
  numberOfSales: BigInt!
  numberOfPurchases: BigInt
}

type Collection @entity {
  id: ID!
  nft: Nft!

  totalSupply: BigInt
  contractURI: String
  version: String
  codename: String
  numberOfTransfers: BigInt!
  numberOfSales: BigInt!
  totalSales: BigInt
  tokenId: BigInt!

  owner: Account!

  event: [Event!]! @derivedFrom(field: "collection")
  sale: [Sale!]! @derivedFrom(field: "collection")
}

type Nft @entity {
  id: ID! #Collection + Token ID
  collection: Collection!
  symbol: String
  sale: Sale

  numberOfTransfers: BigInt!
  numberOfSales: BigInt!
  totalSales: BigInt
  totalTransfers: BigInt

  tokenID: BigInt
  owner: Account!

  "All events"
  events: [Event!]! @derivedFrom(field: "nft")
}

type Sale implements Event @entity {
  id: ID!
  sellHash: Bytes
  buyHash: Bytes
  buyer: Bytes
  seller: Bytes
  price: BigInt
  paymentToken: Token
  account: Account
  collection: Collection!
  eventType: EventType!
  logNumber: BigInt!
  txHash: Bytes
  blockHash: Bytes
  timestamp: BigInt
  logIndex: BigInt
  blockNumber: BigInt
}

type Fee implements Event @entity {
  id: ID!
  takerRelayerFee: BigInt
  makerRelayerFee: BigInt
  takerProtocolFee: BigInt
  makerProtocolFee: BigInt
  feeRecipient: Collection #Check if this is to a collection
  account: Account
  eventType: EventType!
  txHash: Bytes
  blockHash: Bytes
  timestamp: BigInt
  logIndex: BigInt
  blockNumber: BigInt
}

type Transfer implements Event @entity {
  id: ID!
  sender: Bytes!
  receiver: Bytes!
  account: Account
  nft: Nft!
  collection: Collection
  eventType: EventType!
  txHash: Bytes
  blockHash: Bytes
  timestamp: BigInt
  logIndex: BigInt
  blockNumber: BigInt
}

type Auction implements Event @entity {
  id: ID!
  listingTime: BigInt
  expirationTime: BigInt
  basePrice: BigInt
  paymentToken: Token
  staticTarget: Bytes
  staticExtraData: Bytes
  extra: BigInt
  hash: Bytes
  orderbook: Boolean!
  eventType: EventType!
  txHash: Bytes
  blockHash: Bytes
  timestamp: BigInt
  logNumber: BigInt
  logIndex: BigInt
  blockNumber: BigInt
}

type Token @entity {
  id: ID! #Payment token e.g USDC, ETH, DAI
  symbol: String
  name: String
  address: Bytes!
  decimals: BigInt
  numberOfSales: BigInt
  sales: [Sale!]! @derivedFrom(field: "paymentToken")
}
